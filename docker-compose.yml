version: '3.8'

services:
  rideconnect:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rideconnect-app
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/${MONGO_DATABASE}?authSource=admin
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY:-}
      - VITE_STRIPE_PUBLIC_KEY=${VITE_STRIPE_PUBLIC_KEY:-}
    # volumes:
      # Development volume mounts (comment out for production)
      # - .:/app
      # - /app/node_modules
    networks:
      - rideconnect-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - mongodb

  # MongoDB database service
  mongodb:
    image: mongo:7.0
    container_name: rideconnect-mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE}
    volumes:
      - /media/athena/M87/Data/RideConnect/mongodb:/data/db
      - /media/athena/M87/Data/RideConnect/mongodb-config:/data/configdb
    ports:
      - "27017:27017"
    networks:
      - rideconnect-network
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  rideconnect-network:
    driver: bridge

# MongoDB data is stored on external drive at /media/athena/M87/Data/RideConnect/