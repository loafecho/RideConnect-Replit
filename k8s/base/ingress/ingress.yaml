apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rideconnect-ingress
  namespace: rideconnect
  labels:
    app.kubernetes.io/name: rideconnect-ingress
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: rideconnect-platform
  annotations:
    # Nginx ingress controller annotations
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: SAMEORIGIN";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Content-Security-Policy: default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob:; img-src 'self' data: blob: https:; connect-src 'self' https: wss:; font-src 'self' data: https:";
    
    # Enable gzip compression
    nginx.ingress.kubernetes.io/enable-gzip: "true"
    nginx.ingress.kubernetes.io/gzip-level: "6"
    
    # Cert-manager for automatic TLS certificates
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # Monitoring
    nginx.ingress.kubernetes.io/enable-modsecurity: "false"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "false"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - rideconnect.yourdomain.com  # Replace with your actual domain
    - api.rideconnect.yourdomain.com
    secretName: rideconnect-tls
  rules:
  - host: rideconnect.yourdomain.com  # Replace with your actual domain
    http:
      paths:
      # API routes go to backend
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: rideconnect-backend
            port:
              number: 3000
      # Health checks for backend
      - path: /health
        pathType: Exact
        backend:
          service:
            name: rideconnect-backend
            port:
              number: 3000
      - path: /ready
        pathType: Exact
        backend:
          service:
            name: rideconnect-backend
            port:
              number: 3000
      - path: /metrics
        pathType: Exact
        backend:
          service:
            name: rideconnect-backend
            port:
              number: 3000
      # All other routes go to frontend (React SPA)
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rideconnect-frontend
            port:
              number: 80
  - host: api.rideconnect.yourdomain.com  # Optional: separate API subdomain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rideconnect-backend
            port:
              number: 3000