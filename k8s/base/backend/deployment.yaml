apiVersion: apps/v1
kind: Deployment
metadata:
  name: rideconnect-backend
  namespace: rideconnect
  labels:
    app.kubernetes.io/name: rideconnect-backend
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: rideconnect-platform
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: rideconnect-backend
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rideconnect-backend
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: rideconnect-platform
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: rideconnect-backend
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: backend
        image: localhost:5555/rideconnect-backend:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: rideconnect-secrets
              key: mongodb-uri
        - name: MONGO_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: rideconnect-secrets
              key: mongo-root-username
        - name: MONGO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rideconnect-secrets
              key: mongo-root-password
        - name: STRIPE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: rideconnect-secrets
              key: stripe-secret-key
              optional: true
        - name: GOOGLE_CALENDAR_ID
          valueFrom:
            secretKeyRef:
              name: rideconnect-secrets
              key: google-calendar-id
              optional: true
        - name: GOOGLE_SERVICE_ACCOUNT_KEY_PATH
          value: "/app/config/service-account.json"
        envFrom:
        - configMapRef:
            name: rideconnect-backend-config
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: google-service-account
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: tmp
        emptyDir: {}
      - name: google-service-account
        secret:
          secretName: google-service-account
          optional: true
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - rideconnect-backend
              topologyKey: kubernetes.io/hostname